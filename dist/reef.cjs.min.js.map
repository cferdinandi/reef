{"version":3,"file":"reef.cjs.min.js","sources":["../src/components/utilities.js","../src/components/signal.js","../src/components/store.js","../src/components/render.js","../src/components/focus.js","../src/components/component.js"],"sourcesContent":["/**\n * Emit a custom reefevent\n * @param  {String} type   The event type\n * @param  {*}      detail Any details to pass along with the event\n * @param  {Node}   elem   The element to emit the event on\n */\nfunction emit (type, detail, elem = document) {\n\n\t// Create a new event\n\tlet event = new CustomEvent(`reef:${type}`, {\n\t\tbubbles: true,\n\t\tcancelable: true,\n\t\tdetail: detail\n\t});\n\n\t// Dispatch the event\n\treturn elem.dispatchEvent(event);\n\n}\n\n/**\n * Get the element from the UI\n * @param  {String|Node} elem The element or selector string\n * @return {Node}             The element\n */\nfunction getElem (elem) {\n\treturn typeof elem === 'string' ? document.querySelector(elem) : elem;\n}\n\n/**\n * Get an object's type\n * @param  {*}      obj The object\n * @return {String}     The type\n */\nfunction getType (obj) {\n\treturn Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\n}\n\n\nexport {emit, getElem, getType};","import {emit, getType} from './utilities.js';\n\n\n/**\n * Create a Proxy handler object\n * @param  {Array} names The custom event namespaces\n * @param  {Object} data The data object\n * @return {Object}      The handler object\n */\nfunction handler (names, data) {\n\tlet types = Array.isArray(names) ? names : [names];\n\ttypes.push('');\n\treturn {\n\t\tget (obj, prop) {\n\t\t\tif (prop === '_isSignal') return true;\n\t\t\tif (['object', 'array'].includes(getType(obj[prop])) && !obj[prop]._isSignal) {\n\t\t\t\tobj[prop] = new Proxy(obj[prop], handler(name, data));\n\t\t\t}\n\t\t\treturn obj[prop];\n\t\t},\n\t\tset (obj, prop, value) {\n\t\t\tif (obj[prop] === value) return true;\n\t\t\tobj[prop] = value;\n\t\t\tconst eventData = {prop, value, action: 'set'};\n\t\t\ttypes.forEach(name => {\n\t\t\t\tconst type = 'signal' + (name ? `-${name}` : '');\n\t\t\t\temit(type, eventData);\n\t\t\t});\n\t\t\treturn true;\n\t\t},\n\t\tdeleteProperty (obj, prop) {\n\t\t\tdelete obj[prop];\n\t\t\tconst eventData = {prop, value: obj[prop], action: 'delete'};\n\t\t\ttypes.forEach(name => {\n\t\t\t\tconst type = 'signal' + (name ? `-${name}` : '');\n\t\t\t\temit(type, eventData);\n\t\t\t});\n\t\t\treturn true;\n\t\t}\n\t};\n}\n\n/**\n * Create a new signal\n * @param  {Object} data The data object\n * @param  {Array} names The custom event namespaces\n * @return {Proxy}       The signal Proxy\n */\nfunction signal (data = {}, names = '') {\n\tdata = ['array', 'object'].includes(getType(data)) ? data : {value: data};\n\treturn new Proxy(data, handler(names, data));\n}\n\n\nexport default signal;\n","import {emit} from './utilities.js';\n\n\n/**\n * Store Class\n */\nclass Store {\n\n\t/**\n\t * The constructor object\n\t * @param  {Object} data    The data object\n\t * @param  {Object} actions The store functions\n\t * @param  {Array} names    The custom event namespaces for the signal\n\t */\n\tconstructor (data, actions, names = '') {\n\n\t\t// Get signal types\n\t\tlet types = Array.isArray(names) ? names : [names];\n\t\ttypes.push('');\n\n\t\t// Create data property setter/getter\n\t\tObject.defineProperties(this, {\n\t\t\tvalue: {\n\t\t\t\tget () {\n\t\t\t\t\treturn structuredClone(data);\n\t\t\t\t},\n\t\t\t\tset () {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Add store functions\n\t\tfor (let fn in actions) {\n\t\t\tif (typeof actions[fn] !== 'function') continue;\n\t\t\tthis[fn] = function (...args) {\n\t\t\t\tactions[fn](data, ...args);\n\t\t\t\ttypes.forEach(name => {\n\t\t\t\t\tconst type = 'signal' + (name ? `-${name}` : '');\n\t\t\t\t\temit(type, data);\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t}\n\n}\n\n/**\n * Create a new store\n * @param  {Object} data    The data object\n * @param  {Object} setters The store functions\n * @param  {Array} names    The custom event namespaces for the signal\n * @return {Proxy}          The Store instance\n */\nfunction store (data = {}, setters = {}, names = '') {\n\treturn new Store(data, setters, names);\n}\n\n\nexport default store;","import {emit, getElem} from './utilities.js';\n\n\n// Form fields and attributes that can be modified by users\n// They also have implicit values that make it hard to know if they were changed by the user or developer\nlet formFields = ['input', 'option', 'textarea'];\nlet formAtts = ['value', 'checked', 'selected'];\nlet formAttsNoVal = ['checked', 'selected'];\n\n/**\n * Convert a template string into HTML DOM nodes\n * @param  {String}  str The template string\n * @return {Element}     The template HTML\n */\nfunction stringToHTML (str) {\n\n\t// Create document\n\tlet parser = new DOMParser();\n\tlet doc = parser.parseFromString(`<body><template>${str}</template></body>`, 'text/html');\n\n\t// If there's a body, return it\n\tif (doc.body) {\n\t\treturn doc.body.firstElementChild.content;\n\t}\n\n\t// Otherwise, create a body and return it\n\treturn document.createElement('body');\n\n}\n\n/**\n * Check if an attribute string has a stringified falsy value\n * @param  {String}  str The string\n * @return {Boolean}     If true, value is falsy (yea, I know, that's a little confusing)\n */\nfunction isFalsy (str) {\n\treturn ['false', 'null', 'undefined', '0', '-0', 'NaN', '0n', '-0n'].includes(str);\n}\n\n/**\n * Add an event listener to an element\n * @param  {Element} elem   The element to delegate events on\n * @param  {String}  event  The event name\n * @param  {String}  val    The function to run for the event\n * @param  {Object}  events The allowed event functions\n */\nfunction listen (elem, event, val, events) {\n\n\t// Only run if there are events\n\tif (!event.startsWith('on') || !events) return;\n\n\t// If there's already a listener for this event, skip\n\tif (!!elem[event]) return;\n\n\t// Get the event listener ID\n\tlet fnName = val.split('(')[0];\n\tlet listener = events[fnName];\n\tif (!listener) return;\n\n\t// Start listening\n\telem[event] = listener;\n\n}\n\n/**\n * Check if attribute should be skipped (sanitize properties)\n * @param  {String}  name   The attribute name\n * @param  {String}  value  The attribute value\n * @return {Boolean}        If true, skip the attribute\n */\nfunction skipAttribute (name, value) {\n\tlet val = value.replace(/\\s+/g, '').toLowerCase();\n\tif (['src', 'href', 'xlink:href'].includes(name)) {\n\t\tif (val.includes('javascript:') || val.includes('data:text/html')) return true;\n\t}\n\tif (name.startsWith('on') || name.startsWith('@on') || name.startsWith('#on')) return true;\n}\n\n/**\n * Add an attribute to an element\n * @param {Node}   elem   The element\n * @param {String} att    The attribute\n * @param {String} val    The value\n * @param {Object} events The allowed event functions\n */\nfunction addAttribute (elem, att, val, events) {\n\n\t// If there's an event object, add listener\n\tlisten(elem, att, val, events);\n\n\t// Sanitize dangerous attributes\n\tif (skipAttribute(att, val)) return;\n\n\t// If it's a form attribute, set the property directly\n\tif (formAtts.includes(att)) {\n\t\telem[att] = att === 'value' ? val : ' ';\n\t}\n\n\t// Update the attribute\n\telem.setAttribute(att, val);\n\n}\n\n/**\n * Remove an attribute from an element\n * @param {Node}   elem The element\n * @param {String} att  The attribute\n */\nfunction removeAttribute (elem, att) {\n\n\t// If it's a form attribute, remove the property directly\n\tif (formAtts.includes(att)) {\n\t\telem[att] = '';\n\t}\n\n\t// Remove the attribute\n\telem.removeAttribute(att);\n\n}\n\n/**\n * Compare the existing node attributes to the template node attributes and make updates\n * @param  {Node}   template The new template\n * @param  {Node}   existing The existing DOM node\n * @param  {Object} events   The allowed event functions\n */\nfunction diffAttributes (template, existing, events) {\n\n\t// If the node is not an element, bail\n\tif (template.nodeType !== 1) return;\n\n\t// Get attributes for the template and existing DOM\n\tlet templateAtts = template.attributes;\n\tlet existingAtts = existing.attributes;\n\n\t// Add and update attributes from the template into the DOM\n\tfor (let {name, value} of Array.from(templateAtts)) {\n\n\t\t// Skip [#*] attributes\n\t\tif (name.startsWith('#')) continue;\n\n\t\t// Skip user-editable form field attributes\n\t\tif (formAtts.includes(name) && formFields.includes(template.tagName.toLowerCase())) continue;\n\n\t\t// Convert [@*] names to their real attribute name\n\t\tlet attName = name.startsWith('@') ? name.slice(1) : name;\n\n\t\t// If its a no-value property and it's falsy remove it\n\t\tif (formAttsNoVal.includes(attName) && isFalsy(value)) {\n\t\t\tremoveAttribute(existing, attName);\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Otherwise, add the attribute\n\t\taddAttribute(existing, attName, value, events);\n\n\t}\n\n\t// Remove attributes from the DOM that shouldn't be there\n\tfor (let {name, value} of Array.from(existingAtts)) {\n\n\t\t// If the attribute exists in the template, skip it\n\t\tif (templateAtts[name]) continue;\n\n\t\t// Skip user-editable form field attributes\n\t\tif (formAtts.includes(name) && formFields.includes(existing.tagName.toLowerCase())) continue;\n\n\t\t// Otherwise, remove it\n\t\tremoveAttribute(existing, name);\n\n\t}\n\n}\n\n/**\n * Add default attributes to a newly created element\n * @param  {Node}   elem   The element\n * @param  {Object} events The allowed event functions\n */\nfunction addDefaultAtts (elem, events) {\n\n\t// Only run on elements\n\tif (elem.nodeType !== 1) return;\n\n\t// Remove [@*] and [#*] attributes and replace them with the plain attributes\n\t// Remove unsafe HTML attributes\n\tfor (let {name, value} of Array.from(elem.attributes)) {\n\n\t\t// If the attribute should be skipped, remove it\n\t\tif (skipAttribute(name, value)) {\n\t\t\tremoveAttribute(elem, name);\n\t\t\tlisten(elem, name, value, events);\n\t\t\treturn;\n\t\t}\n\n\t\t// If the attribute isn't a [@*] or [#*], skip it\n\t\tif (!name.startsWith('@') && !name.startsWith('#')) continue;\n\n\t\t// Get the plain attribute name\n\t\tlet attName = name.slice(1);\n\n\t\t// Remove the [@*] or [#*] attribute\n\t\tremoveAttribute(elem, name);\n\n\t\t// If it's a no-value attribute and its falsy, skip it\n\t\tif (formAttsNoVal.includes(attName) && isFalsy(value)) continue;\n\n\t\t// Add the plain attribute\n\t\taddAttribute(elem, attName, value, events);\n\n\t}\n\n\t// If there are child elems, recursively add defaults to them\n\tif (elem.childNodes) {\n\t\tfor (let node of elem.childNodes) {\n\t\t\taddDefaultAtts(node, events);\n\t\t}\n\t}\n\n}\n\n/**\n * Get the content from a node\n * @param  {Node}   node The node\n * @return {String}      The content\n */\nfunction getNodeContent (node) {\n\treturn node.childNodes && node.childNodes.length ? null : node.textContent;\n}\n\n/**\n * Check if two nodes are different\n * @param  {Node}    node1 The first node\n * @param  {Node}    node2 The second node\n * @return {Boolean}       If true, they're not the same node\n */\nfunction isDifferentNode (node1, node2) {\n\treturn (\n\t\t(typeof node1.nodeType === 'number' && node1.nodeType !== node2.nodeType) ||\n\t\t(typeof node1.tagName === 'string' && node1.tagName !== node2.tagName) ||\n\t\t(typeof node1.id === 'string' && !!node1.id && node1.id !== node2.id) ||\n\t\t('getAttribute' in node1 && 'getAttribute' in node2 && node1.getAttribute('key') !== node2.getAttribute('key')) ||\n\t\t(typeof node1.src === 'string' && !!node1.src && node1.src !== node2.src)\n\t);\n}\n\n/**\n * Check if the desired node is further ahead in the current DOM tree branch\n * @param  {Node}     node     The node to look for\n * @param  {NodeList} existing The existing nodes in the DOM\n * @return {Node}              The element from the DOM\n */\nfunction aheadInTree (node, existing) {\n\n\t// If the node isn't an element, bail\n\tif (node.nodeType !== 1) return;\n\n\t// Look for the ID or [key] attribute\n\tlet id = node.getAttribute('id');\n\tlet key = node.getAttribute('key');\n\tif (!id || !key) return;\n\n\t// Use the ID or [key] as the selector\n\tlet selector = id ? `#${id}` : `[key=\"${key}\"]`;\n\n\t// Look for the corresponding element in the DOM\n\treturn existing.querySelector(`:scope > ${selector}`);\n\n}\n\n/**\n * If there are extra elements in DOM, remove them\n * @param  {Array} existingNodes The existing DOM nodes\n * @param  {Array} templateNodes The template nodes\n */\nfunction trimExtraNodes (existingNodes, templateNodes) {\n\tlet extra = existingNodes.length - templateNodes.length;\n\tif (extra < 1)  return;\n\tfor (; extra > 0; extra--) {\n\t\texistingNodes[existingNodes.length - 1].remove();\n\t}\n}\n\n/**\n * Remove scripts from HTML\n * @param  {Node} elem The element to remove scripts from\n */\nfunction removeScripts (elem) {\n\tlet scripts = elem.querySelectorAll('script');\n\tfor (let script of scripts) {\n\t\tscript.remove();\n\t}\n}\n\n/**\n * Diff the existing DOM node versus the template\n * @param  {Array}  template The template HTML\n * @param  {Node}   existing The current DOM HTML\n * @param  {Object} events   The allowed event functions\n */\nfunction diff (template, existing, events) {\n\n\t// Get the nodes in the template and existing UI\n\tlet templateNodes = template.childNodes;\n\tlet existingNodes = existing.childNodes;\n\n\t// Don't inject scripts\n\tif (removeScripts(template)) return;\n\n\t// Loop through each node in the template and compare it to the matching element in the UI\n\ttemplateNodes.forEach(function (node, index) {\n\n\t\t// If there's no existing element, create and append\n\t\tif (!existingNodes[index]) {\n\t\t\tlet clone = node.cloneNode(true);\n\t\t\taddDefaultAtts(clone, events);\n\t\t\texisting.append(clone);\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is, but it's not the same node type...\n\t\tif (isDifferentNode(node, existingNodes[index])) {\n\n\t\t\t// Check if node exists further in the tree\n\t\t\tlet ahead = aheadInTree(node, existing);\n\n\t\t\t// If not, insert the new node before the current one\n\t\t\tif (!ahead) {\n\t\t\t\tlet clone = node.cloneNode(true);\n\t\t\t\taddDefaultAtts(clone, events);\n\t\t\t\texistingNodes[index].before(clone);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, move existing node to the current spot\n\t\t\texistingNodes[index].before(ahead);\n\n\t\t}\n\n\t\t// Stop diffing if element should be ignored\n\t\tif (templateNodes[index] && 'hasAttribute' in templateNodes[index] && templateNodes[index].hasAttribute('reef-ignore')) return;\n\n\t\t// If attributes are different, update them\n\t\tdiffAttributes(node, existingNodes[index], events);\n\n\t\t// Stop diffing if a native web component\n\t\tif (node.nodeName.includes('-')) return;\n\n\t\t// If content is different, update it\n\t\tlet templateContent = getNodeContent(node);\n\t\tif (templateContent && templateContent !== getNodeContent(existingNodes[index])) {\n\t\t\texistingNodes[index].textContent = templateContent;\n\t\t}\n\n\t\t// If there shouldn't be child nodes but there are, remove them\n\t\tif (!node.childNodes.length && existingNodes[index].childNodes.length) {\n\t\t\texistingNodes[index].innerHTML = '';\n\t\t\treturn;\n\t\t}\n\n\t\t// If DOM is empty and shouldn't be, build it up\n\t\t// This uses a document fragment to minimize reflows\n\t\tif (!existingNodes[index].childNodes.length && node.childNodes.length) {\n\t\t\tlet fragment = document.createDocumentFragment();\n\t\t\tdiff(node, fragment, events);\n\t\t\texistingNodes[index].appendChild(fragment);\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are nodes within it, recursively diff those\n\t\tif (node.childNodes.length) {\n\t\t\tdiff(node, existingNodes[index], events);\n\t\t}\n\n\t});\n\n\t// If extra elements in DOM, remove them\n\ttrimExtraNodes(existingNodes, templateNodes);\n\n}\n\n/**\n * Render a template into the UI\n * @param  {Node|String} elem     The element or selector to render the template into\n * @param  {String}      template The template to render\n * @param  {Object}      events   The allowed event functions\n */\nfunction render (elem, template, events) {\n\tlet node = getElem(elem);\n\tlet html = stringToHTML(template);\n\tif (!emit('before-render', null, node)) return;\n\tdiff(html, node, events);\n\temit('render', null, node);\n}\n\n\nexport default render;","// Hold the selector for the element to focus on\nlet focusOn;\n\n/**\n * Set focus on the element\n * 1ms delay prevents odd bugs from browser-native focus shifts\n */\nfunction setFocus () {\n\tsetTimeout(function () {\n\n\t\t// Find target element in the DOM\n\t\tlet elem = document.querySelector(focusOn);\n\t\tfocusOn = null;\n\t\tif (!elem) return;\n\n\t\t// Try to focus element\n\t\telem.focus();\n\t\tif (document.activeElement === elem) return;\n\n\t\t// If element could not be focused, set a tabindex and try again\n\t\telem.setAttribute('tabindex', -1);\n\t\telem.focus();\n\n\t}, 1);\n}\n\n/**\n * Shift focus to trigger a screen reader announcement after content is loaded\n */\nfunction focus (selector) {\n\tif (!selector || typeof selector !== 'string') return;\n\tfocusOn = selector;\n\tdocument.addEventListener('reef:render', setFocus, {once: true});\n}\n\n\nexport default focus;","import render from './render.js';\nimport {emit, getElem} from './utilities.js';\n\n\n/**\n * Create the event handler function\n * @param {Class} instance The Component instance\n */\nfunction createHandler (instance) {\n\treturn function handler (event) {\n\t\tinstance.render();\n\t};\n}\n\n/**\n * Component Class\n */\nclass Component {\n\n\t/**\n\t * The constructor object\n\t * @param  {Node|String} elem            The element or selector to render the template into\n\t * @param  {Function}    template        The template function to run when the data updates\n\t * @param  {Object}      options         Additional options\n\t * @param  {Array}       options.signals The names of the signals to listen for\n\t * @param  {Object}      options.events  The allowed event functions\n\t */\n\tconstructor (elem, template, options) {\n\n\t\t// Create instance properties\n\t\tthis.elem = elem;\n\t\tthis.template = template;\n\t\tthis.signals = options.signals ? options.signals.map((signal) => `reef:signal-${signal}`) : ['reef:signal'];\n\t\tthis.events = options.events;\n\t\tthis.handler = createHandler(this);\n\t\tthis.debounce = null;\n\n\t\t// Init\n\t\tthis.start();\n\n\t}\n\n\t/**\n\t * Start reactive data rendering\n\t */\n\tstart () {\n\t\tfor (let signal of this.signals) {\n\t\t\tdocument.addEventListener(signal, this.handler);\n\t\t}\n\t\tthis.render();\n\t\temit('start', null, getElem(this.elem));\n\t}\n\n\t/**\n\t * Stop reactive data rendering\n\t */\n\tstop () {\n\t\tfor (let signal of this.signals) {\n\t\t\tdocument.removeEventListener(signal, this.handler);\n\t\t}\n\t\temit('stop', null, getElem(this.elem));\n\t}\n\n\t/**\n\t * Render the UI\n\t */\n\trender () {\n\n\t\t// Cache instance\n\t\tlet self = this;\n\n\t\t// If there's a pending render, cancel it\n\t\tif (self.debounce) {\n\t\t\twindow.cancelAnimationFrame(self.debounce);\n\t\t}\n\n\t\t// Setup the new render to run at the next animation frame\n\t\tself.debounce = window.requestAnimationFrame(function () {\n\t\t\trender(self.elem, self.template(), self.events);\n\t\t});\n\n\t}\n\n}\n\n/**\n * Create a new listener\n * @param  {Node|String} elem     The element or selector to render the template into\n * @param  {Function}    template The template function to run when the data updates\n * @param  {Object}      options  Additional options\n */\nfunction component (elem, template, options = {}) {\n\treturn new Component(elem, template, options);\n}\n\n\nexport default component;"],"names":["emit","type","detail","elem","document","event","CustomEvent","bubbles","cancelable","dispatchEvent","getElem","querySelector","getType","obj","Object","prototype","toString","call","slice","toLowerCase","handler","names","data","types","Array","isArray","push","get","prop","includes","_isSignal","Proxy","name","set","value","eventData","action","forEach","deleteProperty","Store","constructor","actions","defineProperties","this","structuredClone","fn","args","focusOn","formFields","formAtts","formAttsNoVal","isFalsy","str","listen","val","events","startsWith","listener","split","skipAttribute","replace","addAttribute","att","setAttribute","removeAttribute","addDefaultAtts","nodeType","from","attributes","attName","childNodes","node","getNodeContent","length","textContent","diff","template","existing","templateNodes","existingNodes","scripts","querySelectorAll","script","remove","removeScripts","index","clone","cloneNode","append","node1","node2","tagName","id","getAttribute","src","ahead","key","selector","aheadInTree","before","hasAttribute","templateAtts","existingAtts","diffAttributes","nodeName","templateContent","fragment","createDocumentFragment","appendChild","innerHTML","extra","trimExtraNodes","render","html","doc","DOMParser","parseFromString","body","firstElementChild","content","createElement","stringToHTML","Component","options","instance","signals","map","signal","debounce","start","addEventListener","stop","removeEventListener","self","window","cancelAnimationFrame","requestAnimationFrame","setFocus","setTimeout","focus","activeElement","once","setters"],"mappings":"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"}